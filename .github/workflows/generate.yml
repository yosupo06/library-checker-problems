name: Generate test

on:
  workflow_call:
    inputs:
      force-generate:
        description: Ignore cache and force generate
        required: false
        default: false
        type: boolean
      enable-gcc-ubuntu-diffrun:
        description: Enable gcc-ubuntu-diffrun
        required: false
        default: true
        type: boolean
      enable-clang-mac-diffrun:
        description: Enable clang-mac-diffrun
        required: false
        default: true
        type: boolean
      enable-mingw-windows-diffrun:
        description: Enable mingw-windows-diffrun
        required: false
        default: true
        type: boolean

jobs:
  gcc-ubuntu-diffrun:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip-gcc-ubuntu-diffrun != 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user -r requirements.txt

      - name: Restore versions.json
        uses: actions/cache/restore@v3
        if: ${{ github.event.inputs.force-generate != 'true' }}
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-

      - name: Run generate.py
        run: |
          ulimit -s unlimited
          ./generate_test.py TestGenerateAll
        env:
          ENABLE_GENERATE_TEST: 1
          VERSIONS_CACHE_PATH: versions.json

      - name: Save versions.json
        uses: actions/cache/save@v3
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-${{ hashFiles('versions.json') }}

  clang-mac-diffrun:
    runs-on: macos-latest
    if: ${{ github.event.inputs.skip-clang-mac-diffrun != 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user -r requirements.txt

      - name: Restore versions.json
        uses: actions/cache/restore@v3
        if: ${{ github.event.inputs.force-generate != 'true' }}
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-

      - name: Run generate.py
        run: |
          ./generate_test.py TestGenerateAll
        env:
          CXX: clang++
          ENABLE_GENERATE_TEST: 1
          VERSIONS_CACHE_PATH: versions.json

      - name: Save versions.json
        uses: actions/cache/save@v3
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-${{ hashFiles('versions.json') }}

  mingw-windows-diffrun:
    runs-on: windows-latest
    if: ${{ github.event.inputs.skip-mingw-windows-diffrun != 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user -r requirements.txt

      - name: Restore versions.json
        uses: actions/cache/restore@v3
        if: ${{ github.event.inputs.force-generate != 'true' }}
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-

      - name: Run generate.py
        run: |
          python generate_test.py TestGenerateAll
        env:
          ENABLE_GENERATE_TEST: 1
          VERSIONS_CACHE_PATH: versions.json

      - name: Save versions.json
        uses: actions/cache/save@v3
        with:
          path: versions.json
          key: ${{ runner.os }}-versions-cache-${{ hashFiles('versions.json') }}
